apply plugin: 'com.android.application'
apply from: 'jacoco.gradle'

final ANDROID_VERSION = '27.1.1'
final RETROFIT_VERSION = '2.3.0'
final DAGGER_VERSION = '2.15'
final BUTTERKNIFE_VERSION = '8.8.1'
final LEAKCANARY_VERSION = '1.5.4'
final JUNIT_VERSION = '4.12'
final MOCKITO_VERSION = '1.10.19'
final MOCKITO_ANDROID_VERSION = '2.15.0'
final POWERMOCK_VERSION = '1.6.5'
final RULES_VERSION = '1.0.2'
final RUNNER_VERSION = '1.0.2'
final ESPRESSO_VERSION = '3.0.2'
final OKHTTP_VERSION = '3.9.0'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.fancylab.citylistdemo"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.fancylab.citylistdemo.application.FakeTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug{
            testCoverageEnabled true
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion ANDROID_VERSION
                }
            }
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions{
        abortOnError false
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Memory Leaks
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    //Log
    implementation 'com.jakewharton.timber:timber:4.6.0'
    //Networking
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"
    //Rx adapter for retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    //Rx
    implementation 'io.reactivex:rxjava:1.3.2'
    implementation 'io.reactivex:rxandroid:1.2.1'
    //Annotation
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    //Dagger
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    //Butterknife
    implementation "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    //Android
    implementation "com.android.support:appcompat-v7:${ANDROID_VERSION}"
    implementation "com.android.support:recyclerview-v7:${ANDROID_VERSION}"
    implementation "com.android.support:design:${ANDROID_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    //Image
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Testing
    //Dependencies for local unit tests
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.powermock:powermock-core:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${OKHTTP_VERSION}"
    //Android Testing Support Library's runner and rules
    testImplementation "com.android.support.test:runner:${RUNNER_VERSION}"
    testImplementation "com.android.support.test:rules:${RULES_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    //Mockito and JUnit
    testImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    //Espresso
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:${ESPRESSO_VERSION}"
    implementation "com.android.support.test.espresso:espresso-idling-resource:${ESPRESSO_VERSION}"
    //Mockito and MockWebServer
    androidTestImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    androidTestImplementation "org.mockito:mockito-android:${MOCKITO_ANDROID_VERSION}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${OKHTTP_VERSION}"
    androidTestImplementation "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestImplementation "com.android.support.test:rules:${RULES_VERSION}"
    androidTestImplementation "junit:junit:${JUNIT_VERSION}"
    //Dependency for Annotation
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
}
